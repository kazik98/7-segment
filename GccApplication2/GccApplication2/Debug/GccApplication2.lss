
GccApplication2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000182  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000012e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000182  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000001b4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  000001f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009a2  00000000  00000000  00000218  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000081e  00000000  00000000  00000bba  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000036c  00000000  00000000  000013d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000034  00000000  00000000  00001744  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000420  00000000  00000000  00001778  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001a9  00000000  00000000  00001b98  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000030  00000000  00000000  00001d41  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	06 d0       	rcall	.+12     	; 0xa6 <main>
  9a:	47 c0       	rjmp	.+142    	; 0x12a <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <preset>:
#define F_CPU 8000000
#include <avr/io.h>
#include <util/delay.h>

void preset(){
	DDRD = 0b11111111;
  9e:	8f ef       	ldi	r24, 0xFF	; 255
  a0:	81 bb       	out	0x11, r24	; 17
	PORTD = 0b00000000;
  a2:	12 ba       	out	0x12, r1	; 18
  a4:	08 95       	ret

000000a6 <main>:
}

int main(void)
{
	preset();
  a6:	fb df       	rcall	.-10     	; 0x9e <preset>
	while (1)
	{
		for(int i=0;i<=4;i++)
		{
			PORTD = 0b11101111;
  a8:	6f ee       	ldi	r22, 0xEF	; 239
			_delay_ms(500);
			PORTD = 0x00;
			
			PORTD = 0b11111111;
  aa:	5f ef       	ldi	r21, 0xFF	; 255
			_delay_ms(500);
			PORTD = 0x00;
			
			PORTD = 0b00000111;
  ac:	47 e0       	ldi	r20, 0x07	; 7
			_delay_ms(500);
			PORTD = 0x00;
			
			PORTD = 0b11111101;
  ae:	3d ef       	ldi	r19, 0xFD	; 253
			_delay_ms(500);
			PORTD = 0x00;
			
			PORTD = 0b11101101;
  b0:	2d ee       	ldi	r18, 0xED	; 237
	DDRD = 0b11111111;
	PORTD = 0b00000000;
}

int main(void)
{
  b2:	85 e0       	ldi	r24, 0x05	; 5
  b4:	90 e0       	ldi	r25, 0x00	; 0
	preset();
	while (1)
	{
		for(int i=0;i<=4;i++)
		{
			PORTD = 0b11101111;
  b6:	62 bb       	out	0x12, r22	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b8:	7f ef       	ldi	r23, 0xFF	; 255
  ba:	e4 e3       	ldi	r30, 0x34	; 52
  bc:	fc e0       	ldi	r31, 0x0C	; 12
  be:	71 50       	subi	r23, 0x01	; 1
  c0:	e0 40       	sbci	r30, 0x00	; 0
  c2:	f0 40       	sbci	r31, 0x00	; 0
  c4:	e1 f7       	brne	.-8      	; 0xbe <main+0x18>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <main+0x22>
  c8:	00 00       	nop
			_delay_ms(500);
			PORTD = 0x00;
  ca:	12 ba       	out	0x12, r1	; 18
			
			PORTD = 0b11111111;
  cc:	52 bb       	out	0x12, r21	; 18
  ce:	7f ef       	ldi	r23, 0xFF	; 255
  d0:	e4 e3       	ldi	r30, 0x34	; 52
  d2:	fc e0       	ldi	r31, 0x0C	; 12
  d4:	71 50       	subi	r23, 0x01	; 1
  d6:	e0 40       	sbci	r30, 0x00	; 0
  d8:	f0 40       	sbci	r31, 0x00	; 0
  da:	e1 f7       	brne	.-8      	; 0xd4 <main+0x2e>
  dc:	00 c0       	rjmp	.+0      	; 0xde <main+0x38>
  de:	00 00       	nop
			_delay_ms(500);
			PORTD = 0x00;
  e0:	12 ba       	out	0x12, r1	; 18
			
			PORTD = 0b00000111;
  e2:	42 bb       	out	0x12, r20	; 18
  e4:	7f ef       	ldi	r23, 0xFF	; 255
  e6:	e4 e3       	ldi	r30, 0x34	; 52
  e8:	fc e0       	ldi	r31, 0x0C	; 12
  ea:	71 50       	subi	r23, 0x01	; 1
  ec:	e0 40       	sbci	r30, 0x00	; 0
  ee:	f0 40       	sbci	r31, 0x00	; 0
  f0:	e1 f7       	brne	.-8      	; 0xea <main+0x44>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <main+0x4e>
  f4:	00 00       	nop
			_delay_ms(500);
			PORTD = 0x00;
  f6:	12 ba       	out	0x12, r1	; 18
			
			PORTD = 0b11111101;
  f8:	32 bb       	out	0x12, r19	; 18
  fa:	7f ef       	ldi	r23, 0xFF	; 255
  fc:	e4 e3       	ldi	r30, 0x34	; 52
  fe:	fc e0       	ldi	r31, 0x0C	; 12
 100:	71 50       	subi	r23, 0x01	; 1
 102:	e0 40       	sbci	r30, 0x00	; 0
 104:	f0 40       	sbci	r31, 0x00	; 0
 106:	e1 f7       	brne	.-8      	; 0x100 <main+0x5a>
 108:	00 c0       	rjmp	.+0      	; 0x10a <main+0x64>
 10a:	00 00       	nop
			_delay_ms(500);
			PORTD = 0x00;
 10c:	12 ba       	out	0x12, r1	; 18
			
			PORTD = 0b11101101;
 10e:	22 bb       	out	0x12, r18	; 18
 110:	7f ef       	ldi	r23, 0xFF	; 255
 112:	e4 e3       	ldi	r30, 0x34	; 52
 114:	fc e0       	ldi	r31, 0x0C	; 12
 116:	71 50       	subi	r23, 0x01	; 1
 118:	e0 40       	sbci	r30, 0x00	; 0
 11a:	f0 40       	sbci	r31, 0x00	; 0
 11c:	e1 f7       	brne	.-8      	; 0x116 <main+0x70>
 11e:	00 c0       	rjmp	.+0      	; 0x120 <main+0x7a>
 120:	00 00       	nop
			_delay_ms(500);
			PORTD = 0x00;
 122:	12 ba       	out	0x12, r1	; 18
 124:	01 97       	sbiw	r24, 0x01	; 1
int main(void)
{
	preset();
	while (1)
	{
		for(int i=0;i<=4;i++)
 126:	39 f6       	brne	.-114    	; 0xb6 <main+0x10>
 128:	c4 cf       	rjmp	.-120    	; 0xb2 <main+0xc>

0000012a <_exit>:
 12a:	f8 94       	cli

0000012c <__stop_program>:
 12c:	ff cf       	rjmp	.-2      	; 0x12c <__stop_program>
